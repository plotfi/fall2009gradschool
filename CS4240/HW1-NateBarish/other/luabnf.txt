chunk ::= chunk_rep_stat chunk_opt_laststat

chunk_rep_stat ::= stat chunk_opt_semi chunk_rep_stat
chunk_rep_stat ::= /* empty */

chunk_opt_laststat ::= laststat chunk_opt_semi
chunk_opt_laststat ::= /* empty */

chunk_opt_semi ::= ';'
chunk_opt_semi ::= /* empty */




block ::= chunk



stat ::= varlist `=´ explist

stat ::= functioncall

stat ::= DO block END

stat ::= WHILE exp DO block END

stat ::= REPEAT block UNTIL exp

stat ::= IF exp THEN block stat_rep_elseif stat_opt_else END
stat_rep_elseif ::= ELSEIF exp THEN block stat_rep_elseif
stat_rep_elseif ::= /*empty*/
stat_opt_else ::= ELSE block
stat_opt_else ::= /*empty*/

stat ::= FOR Name `=´ exp `,´ exp stat_opt_exp DO block END
stat_opt_exp ::= `,´ exp
stat_opt_exp ::= /*empty*/

stat ::= FOR namelist IN explist DO block END

stat ::= FUNCTION funcname funcbody

stat ::= LOCAL FUNCTION Name funcbody

stat ::= LOCAL namelist stat_opt_explist
stat_opt_explist ::= `=´ explist 
stat_opt_explist ::= /*empty*/



laststat ::= RETURN laststat_opt_explist
laststat_opt_explist ::= explist
laststat_opt_explist ::= /*empty*/

laststat ::= BREAK



funcname ::= Name funcname_rep_name funcname_opt_name
funcname_rep_name ::= `.´ Name funcname_rep_name
funcname_rep_name ::= /*empty*/
funcname_opt_name ::= `:´ Name
funcname_opt_name ::= /*empty*/



varlist ::= var varlist_rep_var
varlist_rep_var ::= `,´ var varlist_rep_var
varlist_rep_var ::= /*empty*/



var ::=  Name 
var ::= prefixexp `[´ exp `]´ 
var ::= prefixexp `.´ Name 



namelist ::= Name namelist_rep_name
namelist_rep_name ::= `,´ Name namelist_rep_name
namelist_rep_name ::= /*empty*/



explist ::= explist_rep_exp exp
explist_rep_exp ::= exp `,´ explist_rep_exp
explist_rep_exp ::= /*empty*/



exp ::= NIL 
exp ::= FALSE
exp ::= TRUE
exp ::= Number 
exp ::= String 
exp ::= `...´ 
exp ::= function
exp ::= prefixexp 
exp ::= tableconstructor 
exp ::= exp binop exp 
exp ::= unop exp 



prefixexp ::= var 
prefixexp ::= functioncall 
prefixexp ::= `(´ exp `)´



functioncall ::= prefixexp args 
functioncall ::= prefixexp `:´ Name args 



args ::=  `(´ args_opt_explist `)´ 
args_opt_explist ::= explist 
args_opt_explist ::= /*empty*/
args ::= tableconstructor 
args ::= String 



function ::= FUNCTION funcbody



funcbody ::= `(´ funcbody_opt_parlist `)´ block end
funcbody_opt_parlist ::= parlist
funcbody_opt_parlist ::= /*empty*/



parlist ::= namelist parlist_opt_dots
parlist_opt_dots ::= `,´ `...´
parlist_opt_dots ::= /*empty*/
parlist ::= `...´



tableconstructor ::= `{´ tableconstructor_opt_fieldlist `}´
tableconstructor_opt_fieldlist = fieldlist
tableconstructor_opt_fieldlist = /*empty*/



fieldlist ::= field fieldlist_rep_field fieldlist_opt_fieldsep
fieldlist_rep_field ::= fieldsep field fieldlist_rep_field
fieldlist_rep_field ::= /*empty*/
fieldlist_opt_fieldsep ::= fieldsep
fieldlist_opt_fieldsep ::= /*empty*/




field ::= `[´ exp `]´ `=´ exp 
field ::= Name `=´ exp 
field ::= exp



fieldsep ::= `,´ 
fieldsep ::= `;´



binop ::= `+´ 
binop ::= `-´ 
binop ::= `*´ 
binop ::= `/´ 
binop ::= `^´ 
binop ::= `%´ 
binop ::= `..´
binop ::= `<´ 
binop ::= `<=´
binop ::=  `>´
binop ::=  `>=´ 
binop ::= `==´ 
binop ::= `~=´
binop ::= AND 
binop ::= OR



unop ::= `-´ 
unop ::= NOT
unop ::= `#´
